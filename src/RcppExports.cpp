// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// estepdamda
Rcpp::List estepdamda(arma::mat x, arma::mat mu, arma::cube sigma, arma::vec pro);
RcppExport SEXP _damda_estepdamda(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP proSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pro(proSEXP);
    rcpp_result_gen = Rcpp::wrap(estepdamda(x, mu, sigma, pro));
    return rcpp_result_gen;
END_RCPP
}
// ice
/* Inductive conditional estimation */ Rcpp::List ice(arma::mat Y, arma::mat z, arma::mat mu, arma::cube sigma, arma::mat ybar, arma::cube O, arma::uvec obs, arma::uvec ext, arma::vec nc, int C);
RcppExport SEXP _damda_ice(SEXP YSEXP, SEXP zSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP ybarSEXP, SEXP OSEXP, SEXP obsSEXP, SEXP extSEXP, SEXP ncSEXP, SEXP CSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ybar(ybarSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type O(OSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type obs(obsSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type ext(extSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nc(ncSEXP);
    Rcpp::traits::input_parameter< int >::type C(CSEXP);
    rcpp_result_gen = Rcpp::wrap(ice(Y, z, mu, sigma, ybar, O, obs, ext, nc, C));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_damda_estepdamda", (DL_FUNC) &_damda_estepdamda, 4},
    {"_damda_ice", (DL_FUNC) &_damda_ice, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_damda(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
